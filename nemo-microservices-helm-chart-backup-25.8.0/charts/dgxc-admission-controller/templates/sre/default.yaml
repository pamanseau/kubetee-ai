{{- if .Values.enableDGXCRbac }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sre-cluster-scoped-access
rules:
- apiGroups: [ "" ]
  resources:
  - nodes
  - nodes/proxy
  - nodes/status
  - componentstatuses
  verbs: [ "*" ]
- apiGroups: [ "apiregistration.k8s.io" ]
  resources:
  - apiservices
  - apiservices/status
  verbs: [ "*" ]
- apiGroups: [ "authentication.k8s.io" ]
  resources:
  - selfsubjectreviews
  - tokenreviews
  verbs: [ "*" ]
- apiGroups: [ "authorization.k8s.io" ]
  resources:
  - selfsubjectaccessreviews
  - selfsubjectrulesreviews
  - subjectaccessreviews
  verbs: [ "*" ]
- apiGroups: [ "certificates.k8s.io" ]
  resources:
  - certificatesigningrequests
  - certificatesigningrequests/approval
  - certificatesigningrequests/status
  verbs: [ "*" ]
- apiGroups: [ "networking.k8s.io" ]
  resources:
  - ingressclasses
  verbs: [ "*" ]
- apiGroups: [ "rbac.authorization.k8s.io" ]
  resources:
  - clusterrolebindings
  - clusterroles
  verbs: [ "*" ]
- apiGroups: [ "storage.k8s.io" ]
  resources:
  - csidrivers
  - csinodes
  - storageclasses
  - volumeattachments
  - volumeattachments/status
  verbs: [ "*" ]
- apiGroups: [ "admissionregistration.k8s.io" ]
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: [ "*" ]
- apiGroups: [ "apiextensions.k8s.io" ]
  resources:
  - customresourcedefinitions
  - customresourcedefinitions/status
  verbs: [ "*" ]
- apiGroups: [ "scheduling.k8s.io" ]
  resources:
  - priorityclasses
  verbs: [ "*" ]
- apiGroups: [ "node.k8s.io" ]
  resources:
  - runtimeclasses
  verbs: [ "*" ]
- apiGroups: [ "flowcontrol.apiserver.k8s.io" ]
  resources:
  - flowschemas
  - flowschemas/status
  - prioritylevelconfigurations
  - prioritylevelconfigurations/status
  verbs: [ "*" ]
- apiGroups: [ "auto.gke.io" ]
  resources:
  - allowlistedworkloads
  - allowlistedv2workloads
  verbs: [ "*" ]
- apiGroups: [ "cilium.io" ]
  resources:
  - ciliumexternalworkloads
  - ciliumexternalworkloads/status
  - ciliumidentities
  - ciliumidentities/status
  - ciliumnodes
  - ciliumnodes/status
  verbs: [ "*" ]
- apiGroups: [ "engine.run.ai" ]
  resources:
  - configs
  - configs/status
  verbs: [ "*" ]
- apiGroups: [ "external-secrets.io" ]
  resources:
  - clusterexternalsecrets
  - clusterexternalsecrets/status
  - clustersecretstores
  - clustersecretstores/status
  verbs: [ "*" ]
- apiGroups: [ "hub.gke.io" ]
  resources:
  - memberships
  verbs: [ "*" ]
- apiGroups: [ "kyverno.io" ]
  resources:
  - clusterpolicies
  - clusterpolicies/status
  verbs: [ "*" ]
- apiGroups: [ "monitoring.googleapis.com" ]
  resources:
  - clusterpodmonitorings
  - clusterpodmonitorings/status
  - clusterrules
  - clusterrules/status
  - globalrules
  - globalrules/status
  - clusternodemonitorings
  - clusternodemonitorings/status
  verbs: [ "*" ]
- apiGroups: [ "networking.gke.io" ]
  resources:
  - gkenetworkparamsets
  - gkenetworkparamsets/status
  - networks
  - networks/status
  verbs: [ "*" ]
- apiGroups: [ "nfd.k8s-sigs.io" ]
  resources:
  - nodefeaturerules
  verbs: [ "*" ]
- apiGroups: [ "reports.kyverno.io" ]
  resources:
  - clusterephemeralreports
  verbs: [ "*" ]
- apiGroups: [ "skyhook.nvidia.com" ]
  resources:
  - skyhooks
  - skyhooks/status
  verbs: [ "*" ]
- apiGroups: [ "snapshot.storage.k8s.io" ]
  resources:
  - volumesnapshotcontents
  - volumesnapshotcontents/status
  - volumesnapshotclasses
  verbs: [ "*" ]
- apiGroups: [ "warden.gke.io" ]
  resources:
  - audits
  - audits/status
  verbs: [ "*" ]
- apiGroups: [ "wgpolicyk8s.io" ]
  resources:
  - clusterpolicyreports
  verbs: [ "*" ]
- apiGroups: [ "metrics.k8s.io" ]
  resources:
  - nodes
  verbs: [ "*" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sre-cluster-scoped-access
subjects:
  - kind: Group
    name: {{ .Values.sre.group.default }}
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: sre-cluster-scoped-access
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: dgxc-sre-generate-namespace-rolebindings
  annotations:
    argocd.argoproj.io/sync-options: Force=true,Replace=true
  labels:
    dgxc/system-managed: "true"
spec:
  generateExisting: true
  rules:
    - name: generate-sre-namespace-rolebinding
      match:
        any:
        - resources:
            kinds:
              - Namespace
            names:
            {{- range .Values.clusterScopedKinds }}
            {{- if eq .kind "Namespace" }}
            {{- range .systemResources }}
              - {{ . | quote }}
            {{- end }}
            {{- end }}
            {{- end }}
      generate:
        synchronize: true
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        name: "sre-ns-{{ `{{ request.object.metadata.name }}` }}-binding"
        namespace: "{{ `{{ request.object.metadata.name }}` }}"
        data:
          metadata:
            labels:
              dgxc/customer-app-admin: "true"
              dgxc/system-managed: "true"
              dgxc/generated: "true"
          subjects:
            - kind: Group
              name: {{ .Values.sre.group.default }}
              apiGroup: rbac.authorization.k8s.io
          roleRef:
            kind: ClusterRole
            name: cluster-admin
            apiGroup: rbac.authorization.k8s.io
{{- end }}
