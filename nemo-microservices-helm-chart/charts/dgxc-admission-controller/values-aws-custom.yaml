---
kubernetesAffinity:
  enabled: false

systemTolerationKeyName: dedicated
systemTolerationValueName: "system-workload"

tolerations:
  customer:
    key: "dedicated"
    value: "user-workload"
  system:
    key: "dedicated"
    value: "system-workload"

cloudProviderSpec:
  type: aws
  aws:
    accountName: nv-dgxc-non-prod-runai-dev
    clusterName: t11111111-dgxc-k8s-runai-aws-us-east-1-dev
    efa: true
    region: us-east-1
    securityGroupARN: arn:aws:ec2:us-east-1:111111111111:security-group/sg-11111111111111111
    statefulRuleGroupName: dgxc-runai-dev-fw-nacls
    gpuNode:
      gpuAllocatable: "8"
      hugePagesAllocatable: 42242Mi
      efaAllocatable: "32"

envVars:
  user:
    efa:
      - name: FI_EFA_USE_DEVICE_RDMA
        value: "1"
      - name: OPAL_PREFIX
        value: "/opt/amazon-efa-ofi/openmpi"
      - name: NVIDIA_GDRCOPY
        value: "enabled"

storageControllerSpecAWS:
  enabled: false
  defaultStorageTypes:
    - apiVersion: runai.dgxc.nvidia.com/v1beta1
      kind: RunaiDGXCStorage
      metadata:
        name: amazon-fsx-for-lustre
        namespace: dgxc-tenant-cluster-policies
      spec:
        quotaID: L-C8640C82
      status:
        altNames: [ "fsx" ]
        storageClasses:
        - lustre-sc
        - dgxc-enterprise-file
        - dgxc-standard-file
        storageClassesDisplayString: "lustre-sc"
        docs: https://aws.amazon.com/fsx/when-to-choose-fsx/

nvStorage:
  # NVStorageLocation CRD management
  enabled: false
  storageClass: "dgxc-standard-object"
  csi:
    driver: "s3.csi.aws.com"
    volumeAttributes:
      authenticationSource: pod